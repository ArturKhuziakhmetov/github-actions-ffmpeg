# git ffmpeg-commit && git ffmpeg-push; gh ffmpeg-wrun cache.yml -f test=true -f ffmpeg=snapshot

name: cache
on:
  workflow_dispatch:
    inputs:
      delete:
        type: boolean
        default: true
      test:
        type: boolean
env:
  path: /home/runner/.local/bin
  GH_TOKEN: ${{ github.token }}
jobs:
  delete:
    if: inputs.delete
    runs-on: ubuntu-latest
    steps:
      - name: Delete old cache(s)
        run: gh cache delete -R ${{ github.repository }} --succeed-on-no-caches --all
        # run: gh cache delete -R ${{ github.repository }} $(gh cache list -R ${{ github.repository }} --json id,key -q '.[]|select(.key=="bin")|.id')

  cache:
    runs-on: ubuntu-latest
    steps:
      - name: Download programs
        run: |
          # set -x
          mkdir -p $path
          cd $path
          gh alias set get 'release download -R $1 -p $2 -O $3'

          # 7z
          gh get ip7z/7zip '*linux-x64*' - | tar -xJ --xform "s/zs//" 7zzs &

          # curl
          gh get stunnel/static-curl '*linux-x86_64-glibc*' - | tar -xJ curl

          # jq
          gh get jqlang/jq jq-linux-amd64 jq &

          # yq
          gh get mikefarah/yq yq_linux_amd64 yq &

          # rclone
          curl -s https://downloads.rclone.org/rclone-current-linux-amd64.deb | dpkg --fsys-tarfile - | tar -x --strip=3 ./usr/bin/rclone &

          # magick
          # gh get ImageMagick/ImageMagick '*gcc-x86_64.AppImage' magick &

          # ffmpeg
          gh get BtbN/FFmpeg-Builds '*master*linux64-gpl.*' - | tar -xJ --strip=2 ffmpeg-master-latest-linux64-gpl/bin/{ffmpeg,ffprobe} &
          # gh get BtbN/FFmpeg-Builds '*latest-linux64-gpl-8.0.*' - | tar -xJ --strip=2 ffmpeg-n8.0-latest-linux64-gpl-8.0/bin/{ffmpeg,ffprobe} &

          # mkvmerge
          # sudo apt install -yqq libfuse2t64 &> /dev/null &
          curl -s https://mkvtoolnix.download/appimage/MKVToolNix_GUI-$(curl -s https://mkvtoolnix.download/latest-release.xml | yq -px .mkvtoolnix-releases.latest-source.version)-x86_64.AppImage -o AppImage
          chmod +x AppImage
          AppImage --appimage-extract > /dev/null
          rm AppImage
          cat << EOF > mkvmerge
          export APPDIR=$path/squashfs-root
          export ARGV0=mkvmerge
          $path/squashfs-root/AppRun "\$@"
          EOF

          wait
          chmod +x *
          echo "${{ secrets.RCLONE_CONF }}" | base64 -d | xz -d > rclone.conf

      - name: Check programs
        run: |
          ls -l $path
          curl -V | head -1
          7z | head -2 | tail -1
          rclone version | head -1
          ffmpeg -version | head -1
          mkvmerge -V
          # magick -version | head -1
          jq -V
          yq -V

      - uses: actions/cache/save@v4
        with:
          key: bin
          path: ${{ env.path }}


  test:
    if: inputs.test
    needs: cache
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache/restore@v4
        with:
          key: bin
          path: ${{ env.path }}

      - name: Check programs
        run: |
          set -x
          ls -l $path
          curl -V | head -1
          7z | head -2 | tail -1
          rclone version | head -1
          ffmpeg -version | head -1
          mkvmerge -V
          # magick -version | head -1
          jq -V
          yq -V

