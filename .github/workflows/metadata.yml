# git ffmpeg-commit && git ffmpeg-push; gh ffmpeg-wrun metadata.yml -f title="$title"

name: metadata
run-name: ${{ inputs.title }}
on:
  workflow_dispatch:
    inputs:
      title:
        required: true
      include:
        default: '*.m??'
      t:
        default: 20
jobs:
  process:
    name: ${{ inputs.title }}
    runs-on: ubuntu-latest
    steps:

      - uses: actions/cache/restore@v4
        with:
          key: bin
          path: /home/runner/.local/bin

      - name: Download
        run: rclone copy "${{ vars.INPUT_ROOT }}/${{ inputs.title }}" ./download --include='${{ inputs.include }}' --stats-one-line --transfers=16 -v

      - name: Process
        run: |
          shopt -s globstar
          mv -n **/${{ inputs.include }} .
          mkdir -p out/{images,begin,end,scenes}
          echo "files:" > out/files.yaml

          for file in ${{ inputs.include }}; do

          echo "$file"

          ffmpeg -v 24 -i "$file" -t ${{ inputs.t }} -c copy out/begin/"$file"
          ffmpeg -v 24 -sseof -${{ inputs.t }} -i "$file" -c copy out/end/"$file"
          ffmpeg -v 24 -an -ss 60 -i "$file" -frames 1 -update 1 out/images/"$file".png

          qfile=${file//,/\\,}; qfile=${qfile//\'/\\\\\\\'}
          ffprobe -v 24 -of default=nw=1:nk=1 -show_entries frame=best_effort_timestamp_time -f lavfi "movie=$qfile,select=gte(scene\,.5)" > out/scenes/"$file".txt

          duration=$(ffprobe -v 24 -show_entries format=duration -of csv=p=0 "$file")

          ffmpeg -v 24 -vn -i "$file" -af silencedetect=d=1:n=1e-3,ametadata=mode=print:file=silence -f null -

          ss=$(grep -m1 end silence | cut -c19-)
          printf -v ss %.6f ${ss:-0}

          to=$(grep start silence | tail -1 | cut -c21-)
          printf -v to %.6f $(bc <<< ${to:-$duration}-$duration)

          {
            printf '%s@' $ss $to $duration "$file" $(ffprobe -v 24 -select_streams v -show_entries stream=width,height,r_frame_rate,avg_frame_rate -of csv=p=0:s=@ "$file")
            echo
          } >> metadata

          cat << EOF >> out/files.yaml
            - file: "$file"
              duration: $duration
              ops:
                <<: *ops
                vf:
                  - trim: *trim
                  - crop:
                      <<: *crop
                  # - pad: *pad
                  # - fillborders:
                      # <<: *fillborders
                  - fps: *fps
          EOF

          done

          column -ts@ -N ss,to,duration,file,w,h,fps,afps -O 7,8,5,6 -R1,2,3 -E4 metadata | tee out/metadata.txt

      - name: Upload
        run: rclone copy out "${{ vars.OUTPUT_ROOT }}/${{ inputs.title }}" --stats-one-line --no-update-modtime --transfers=16 -v
